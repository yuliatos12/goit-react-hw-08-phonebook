{"version":3,"file":"static/js/702.cafc0135.chunk.js","mappings":"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","sources":["redux/selectors.js","components/ContactForm/ContactForm.jsx","components/ContactItem/ContactItem.styled.js","components/ContactItem/ContactItem.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","pages/Contacts.jsx","pages/Pages.styled.js"],"sourcesContent":["export const getContacts = state => state.contacts.items;\n\nexport const getLoading = state => state.contacts.isLoading;\n\nexport const getError = state => state.contacts.error;\n\nexport const getFilter = state => state.filter;","import { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { postContact } from \"redux/contacts/operations\";\nimport { getContacts } from \"redux/selectors\";\nimport { nanoid } from 'nanoid';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { StyledButton, StyledForm, StyledInput } from \"pages/Pages.styled\";\n\nexport const ContactForm = () => {\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n\n    const dispatch = useDispatch();\n\n    const contacts = useSelector(getContacts);\n\n    const handleChange = e => {\n        const { name, value } = e.target;\n        switch (name) {\n            case 'name':\n                setName(value);\n                break;\n            case 'number':\n                setNumber(value);\n                break;\n\n            default:\n                return;\n        }\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault();\n\n        if (name === '' || number === '') {\n            return Notify.warning('Please fill in the fields')\n        }\n\n        const data = { name, number };\n        const newContact = { ...data, id: nanoid() };\n\n        const existingContact = contacts.find(contact => contact.name === name);\n\n        if (existingContact) {\n            return Notify.warning(`${name} is already in contacts`);\n        }\n\n        dispatch(postContact(newContact));\n        reset();\n\n    }\n\n    const reset = () => {\n        setName('');\n        setNumber('');\n    };\n    return (\n        <StyledForm style={{\n            border: '1px solid white',\n            background: 'rgba(242, 233, 238, 0.2)'\n        }} onSubmit={handleSubmit}>\n\n            <p style={{\n                color: \"lightgrey\",\n                marginTop: \"5px\",\n                fontSize: '18px',\n                textAlign: 'center',\n            }}>You can add your contacts here:</p>\n            <StyledInput type=\"text\" name=\"name\" placeholder='Enter the name' value={name} onChange={handleChange} />\n            <StyledInput type=\"tel\" name=\"number\" placeholder='Enter the phone number' value={number} onChange={handleChange} />\n            <StyledButton type=\"submit\">Add contact</StyledButton>\n        </StyledForm>\n    )\n}","import styled from 'styled-components';\n\nexport const DeleteStyled = styled.button`\nborder: none;\nbackground-color: transparent;\n`","import { deleteContacts } from \"redux/contacts/operations\";\nimport { useDispatch } from \"react-redux\";\nimport { MdDelete } from \"react-icons/md\";\nimport { DeleteStyled } from \"./ContactItem.styled\";\nimport { IoMdContact } from \"react-icons/io\";\n\nexport const ContactItem = ({ name, number, id }) => {\n\n    const dispatch = useDispatch();\n\n    const handleDelete = () => dispatch(deleteContacts(id));\n    return (\n        <li style={{ display: \"flex\", alignItems: 'center', justifyContent: 'space-between', borderBottom: '1px solid rgba(94, 75, 152, 0.2)' }}>\n            <IoMdContact style={{\n                width: '40px',\n                height: '40px',\n                fill: 'rgba(93, 36, 133, 0.85)'\n            }} />\n            <div>\n                <p>{name}</p>\n                <p style={{ color: 'rgba(93, 36, 133, 0.85)' }}>{number}</p>\n            </div>\n            <DeleteStyled type=\"button\" onClick={handleDelete}><MdDelete style={{\n                width: '25px',\n                height: '25px',\n                fill: 'darkred',\n                cursor: 'pointer'\n            }} /></DeleteStyled>\n        </li>\n    )\n}","import { useDispatch, useSelector } from \"react-redux\";\nimport { setFilter } from \"redux/filter/filterSlice\";\nimport { getFilter } from \"redux/selectors\";\nimport { IoSearchSharp } from \"react-icons/io5\";\n\nexport const Filter = () => {\n    const dispatch = useDispatch();\n    const filter = useSelector(getFilter);\n\n    const handleFilterChange = e => dispatch(setFilter(e.currentTarget.value))\n\n    return (\n        <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n            <input style={{ borderRadius: '5px', border: 'transparent', padding: '5px' }} type=\"text\" name=\"filter\" value={filter} onChange={handleFilterChange} />\n            <IoSearchSharp style={{ color: 'rgba(93, 36, 133, 0.85)', width: '25px', height: '25px' }} />\n        </div>\n    )\n}","import { ContactItem } from \"components/ContactItem/ContactItem\"\nimport { Filter } from \"components/Filter/Filter\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchContacts } from \"redux/contacts/operations\";\nimport { getContacts } from \"redux/selectors\";\nimport { getFilter } from \"redux/selectors\";\n\nexport const ContactList = () => {\n\n\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts())\n  }, [dispatch]);\n\n  const getFilteredContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  const filteredContacts = getFilteredContacts();\n\n  return (\n    <div style={{\n      background: 'rgba(242, 233, 238, 0.9)',\n      padding: '3em',\n      borderRadius: '20px',\n      backdropFilter: 'blur(10px)',\n      boxShadow: '20px 20px 40px -6px rgba(0,0,0,0.2)',\n      width: '500px',\n      textAlign: 'center'\n    }}>\n\n      <Filter />\n\n      <p style={{ color: 'rgba(93, 36, 133, 0.85)' }}>CONTACTS</p>\n      \n      <ul style={{ padding: '0' }}>\n        {filteredContacts.map(({ id, name, number }) => (\n          <ContactItem\n            key={id}\n            id={id}\n            name={name}\n            number={number}\n          ></ContactItem>\n        ))}\n      </ul>\n    </div>\n  )\n}\n\n","import { ContactForm } from \"components/ContactForm/ContactForm\";\nimport { ContactList } from \"components/ContactList/ContactList\";\n\nconst Contacts = () => {\n    return (\n        <div style={{ paddingTop: '50px', display: 'flex', alignItems: 'flex-start', gap: '50px' }}>\n            <ContactForm />\n            <ContactList />\n        </div>\n\n    )\n}\n\nexport default Contacts;","import styled from 'styled-components';\n\nexport const StyledForm = styled.form`\n  background: rgba(242, 233, 238, 0.3);\n  padding: 40px;\n  border-radius: 20px;\n  backdrop-filter: blur(10px);\n  box-shadow: 20px 20px 40px -6px rgba(0, 0, 0, 0.2);\n  display: inline-block;\n`;\nexport const StyledInput = styled.input`\n  display: block;\n  background: transparent;\n  width: 260px;\n  padding: 1em;\n  margin-bottom: 2em;\n  border-radius: 5px;\n  border: transparent;\n  backdrop-filter: blur(74px);\n  box-shadow: 4px 4px 60px rgba(0, 0, 0, 0.2);\n  color: #fff;\n  transition: all 0.2s ease-in-out;\n  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.2);\n\n  &:hover {\n    background: rgba(255, 255, 255, 0.1);\n    box-shadow: 4px 4px 60px 8px rgba(0, 0, 0, 0.2);\n  }\n  &:focus {\n    background: rgba(255, 255, 255, 0.1);\n    box-shadow: 4px 4px 60px 8px rgba(0, 0, 0, 0.2);\n  }\n`;\nexport const StyledLabel = styled.label`\n  font-weight: 400;\n  color: #fff;\n  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.4);\n  margin-bottom: 10px;\n  display: block;\n  font-size: 16px;\n  text-align: left;\n`;\nexport const StyledButton = styled.button`\n  background: transparent;\n  padding: 1em;\n  border-radius: 5000px;\n  border: transparent;\n  backdrop-filter: blur(74px);\n  box-shadow: 4px 4px 60px rgba(0, 0, 0, 0.2);\n  color: #fff;\n  transition: all 0.2s ease-in-out;\n  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.2);\n  margin: 0 auto;\n  display: block;\n  padding-left: 40px;\n  padding-right: 40px;\n  font-size: 16px;\n  cursor: pointer;\n\n  &:hover {\n    background: rgba(255, 255, 255, 0.1);\n    box-shadow: 4px 4px 60px 8px rgba(0, 0, 0, 0.2);\n  }\n`;\n"],"names":["getContacts","state","contacts","items","getFilter","filter","ContactForm","useState","name","setName","number","setNumber","dispatch","useDispatch","useSelector","handleChange","e","target","value","reset","style","border","background","onSubmit","preventDefault","Notify","data","newContact","id","nanoid","find","contact","postContact","color","marginTop","fontSize","textAlign","type","placeholder","onChange","DeleteStyled","styled","ContactItem","display","alignItems","justifyContent","borderBottom","width","height","fill","onClick","deleteContacts","cursor","Filter","borderRadius","padding","setFilter","currentTarget","ContactList","useEffect","fetchContacts","filteredContacts","normalizedFilter","toLowerCase","includes","getFilteredContacts","backdropFilter","boxShadow","map","paddingTop","gap","StyledForm","StyledInput","StyledLabel","StyledButton"],"sourceRoot":""}