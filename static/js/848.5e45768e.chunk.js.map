{"version":3,"file":"static/js/848.5e45768e.chunk.js","mappings":"+QAEaA,EAAaC,EAAAA,GAAAA,KAAH,4NAQVC,EAAcD,EAAAA,GAAAA,MAAH,4kBAuBXE,EAAcF,EAAAA,GAAAA,MAAH,iMASXG,EAAeH,EAAAA,GAAAA,OAAH,6hB,iHCiCzB,UArEe,WAEX,OAA0BI,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KAEMC,GAAWC,EAAAA,EAAAA,MACXC,EAAe,SAAAC,GACjB,MAAwBA,EAAEC,OAAlBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACd,OAAQD,GACJ,IAAK,QACDR,EAASS,GACT,MACJ,IAAK,WACDP,EAAYO,GACZ,MAEJ,QACI,OAEX,EAYKC,EAAQ,WACVV,EAAS,IACTE,EAAY,GACf,EAEKS,GAAeC,EAAAA,EAAAA,MACfC,GAAcD,EAAAA,EAAAA,MAEpB,OACI,iBAAKE,MAAO,CAAEC,UAAW,SAAUC,WAAY,QAA/C,WACI,cAAGF,MAAO,CACNG,MAAO,YACPC,UAAW,MACXC,SAAU,QAHd,SAIG,2CACH,UAAC,KAAD,CAAYC,SAzBC,SAAAd,GAIjB,GAHAA,EAAEe,iBACFlB,GAASmB,EAAAA,EAAAA,IAAO,CAAEvB,MAAAA,EAAOE,SAAAA,KAEX,KAAVF,GAA6B,KAAbE,EAChB,OAAOsB,EAAAA,OAAAA,QAAe,kCAE1Bb,GACH,EAiBO,WACI,SAAC,KAAD,CAAac,QAASb,EAAtB,SACC,YAGD,SAAC,KAAD,CAAac,GAAId,EAAce,KAAK,QAAQlB,KAAK,QAAQC,MAAOV,EAAO4B,SAAUtB,KAEjF,SAAC,KAAD,CAAamB,QAASX,EAAtB,SACC,eAGD,SAAC,KAAD,CAAaY,GAAIZ,EAAaa,KAAK,WAAWlB,KAAK,WAAWC,MAAOR,EAAU0B,SAAUtB,KAEzF,SAAC,KAAD,CAAcqB,KAAK,SAAnB,SAA4B,gBAQ3C,C","sources":["pages/Pages.styled.js","pages/SignIn.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledForm = styled.form`\n  background: rgba(242, 233, 238, 0.3);\n  padding: 40px;\n  border-radius: 20px;\n  backdrop-filter: blur(10px);\n  box-shadow: 20px 20px 40px -6px rgba(0, 0, 0, 0.2);\n  display: inline-block;\n`;\nexport const StyledInput = styled.input`\n  display: block;\n  background: transparent;\n  width: 260px;\n  padding: 1em;\n  margin-bottom: 2em;\n  border-radius: 5px;\n  border: transparent;\n  backdrop-filter: blur(74px);\n  box-shadow: 4px 4px 60px rgba(0, 0, 0, 0.2);\n  color: #fff;\n  transition: all 0.2s ease-in-out;\n  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.2);\n\n  &:hover {\n    background: rgba(255, 255, 255, 0.1);\n    box-shadow: 4px 4px 60px 8px rgba(0, 0, 0, 0.2);\n  }\n  &:focus {\n    background: rgba(255, 255, 255, 0.1);\n    box-shadow: 4px 4px 60px 8px rgba(0, 0, 0, 0.2);\n  }\n`;\nexport const StyledLabel = styled.label`\n  font-weight: 400;\n  color: #fff;\n  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.4);\n  margin-bottom: 10px;\n  display: block;\n  font-size: 16px;\n  text-align: left;\n`;\nexport const StyledButton = styled.button`\n  background: transparent;\n  padding: 1em;\n  border-radius: 5000px;\n  border: transparent;\n  backdrop-filter: blur(74px);\n  box-shadow: 4px 4px 60px rgba(0, 0, 0, 0.2);\n  color: #fff;\n  transition: all 0.2s ease-in-out;\n  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.2);\n  margin: 0 auto;\n  display: block;\n  padding-left: 40px;\n  padding-right: 40px;\n  font-size: 16px;\n  cursor: pointer;\n\n  &:hover {\n    background: rgba(255, 255, 255, 0.1);\n    box-shadow: 4px 4px 60px 8px rgba(0, 0, 0, 0.2);\n  }\n`;\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { signIn } from \"redux/auth/operations\";\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { StyledButton, StyledForm, StyledInput, StyledLabel } from \"./Pages.styled\";\nimport { nanoid } from 'nanoid';\nconst SignIn = () => {\n\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    const dispatch = useDispatch()\n    const handleChange = e => {\n        const { name, value } = e.target;\n        switch (name) {\n            case 'email':\n                setEmail(value);\n                break;\n            case 'password':\n                setPassword(value);\n                break;\n\n            default:\n                return;\n        }\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        dispatch(signIn({ email, password }));\n\n        if (email === '' || password === '') {\n            return Notify.warning('Please fill in all the fields!');\n        }\n        reset();\n    }\n\n    const reset = () => {\n        setEmail('');\n        setPassword('');\n    };\n\n    const emailInputId = nanoid();\n    const passInputId = nanoid();\n\n    return (\n        <div style={{ textAlign: 'center', paddingTop: '50px' }}>\n            <p style={{\n                color: \"lightgrey\",\n                marginTop: \"5px\",\n                fontSize: '20px',\n            }}>Please, log in to go to your contacts</p>\n            <StyledForm onSubmit={handleSubmit} >\n                <StyledLabel htmlFor={emailInputId}\n                >\n                    Email:\n                </StyledLabel>\n                <StyledInput id={emailInputId} type=\"email\" name=\"email\" value={email} onChange={handleChange} />\n\n                <StyledLabel htmlFor={passInputId}\n                >\n                    Password:\n                </StyledLabel>\n                <StyledInput id={passInputId} type=\"password\" name=\"password\" value={password} onChange={handleChange} />\n\n                <StyledButton type=\"submit\">Log In</StyledButton>\n\n            </StyledForm>\n        </div>\n\n\n    )\n\n}\n\nexport default SignIn;"],"names":["StyledForm","styled","StyledInput","StyledLabel","StyledButton","useState","email","setEmail","password","setPassword","dispatch","useDispatch","handleChange","e","target","name","value","reset","emailInputId","nanoid","passInputId","style","textAlign","paddingTop","color","marginTop","fontSize","onSubmit","preventDefault","signIn","Notify","htmlFor","id","type","onChange"],"sourceRoot":""}